import { useEffect } from 'react';
import { useHabitsStore } from '../model/useHabitsStore';
import { useAuth } from '../../auth/model/useAuth';
import { generateUUID } from '../../../shared/lib/uuid';
import { colors } from '../../../shared/theme';
import type { Habit } from '../../../shared/types';

export const useHabitsSync = () => {
  const { habits, addHabit, updateHabit, removeHabit, setUserId } = useHabitsStore();
  const { user } = useAuth();

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ userId –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    if (user) {
      setUserId(user.id);
    }
  }, [user, setUserId]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏
  const addHabitWithSync = (input: {
    name: string;
    description?: string;
    category?: string;
    color?: string;
  }) => {
    console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø—Ä–∏–≤—ã—á–∫–∏:', input);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º UUID –∑–∞—Ä–∞–Ω–µ–µ
    const newHabitId = generateUUID();
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤—ã—á–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ID
    const newHabit: Habit = {
      id: newHabitId,
      userId: user?.id || 'local',
      name: input.name.trim(),
      description: input.description?.trim(),
      category: input.category?.trim() || '–û–±—â–µ–µ',
      icon: 'list',
      color: input.color || colors.primary,
      frequency: 'daily',
      target: undefined,
      unit: undefined,
      isActive: true,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤—ã—á–∫—É –Ω–∞–ø—Ä—è–º—É—é –≤ store
    const { habits: currentHabits } = useHabitsStore.getState();
    useHabitsStore.setState({ 
      habits: [...currentHabits, newHabit] 
    });
    
    console.log('–ü—Ä–∏–≤—ã—á–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å ID:', newHabitId);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏
  const updateHabitWithSync = (habitId: string, input: {
    name?: string;
    description?: string;
    category?: string;
    color?: string;
    isActive?: boolean;
  }) => {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏:', habitId, input);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏
    updateHabit(habitId, input);
    
    console.log('‚úÖ –ü—Ä–∏–≤—ã—á–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏
  const removeHabitWithSync = async (habitId: string) => {
    const habit = habits.find(h => h.id === habitId);
    
    if (!habit) {
      console.error('–ü—Ä–∏–≤—ã—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
      return;
    }

    console.log('–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏:', habitId);
    
    // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
    removeHabit(habitId);
  };

  return {
    habits,
    addHabit: addHabitWithSync,
    updateHabit: updateHabitWithSync,
    removeHabit: removeHabitWithSync,
  };
};