import { initializeApp, getApps } from '@react-native-firebase/app';
import messaging from '@react-native-firebase/messaging';
import { Alert, Platform } from 'react-native';

// Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ google-services.json
// –î–ª—è —Å–ø—Ä–∞–≤–∫–∏, –∑–Ω–∞—á–µ–Ω–∏—è —Ç–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ src/shared/lib/env.ts

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase (–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ google-services.json)
if (getApps().length === 0) {
  console.log('üî• Firebase: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase...');
  initializeApp();
  console.log('üî• Firebase: Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
} else {
  console.log('üî• Firebase: Firebase —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

// Firebase Messaging
export const firebaseMessaging = messaging();
console.log('üî• Firebase: Messaging –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

// –ü–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞
export const getFCMToken = async (): Promise<string | null> => {
  try {
    console.log('üî• Firebase: –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞...');
    
    if (Platform.OS === 'android') {
      console.log('üî• Firebase: –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è...');
      const authStatus = await messaging().requestPermission();
      console.log('üî• Firebase: –°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:', authStatus);
      
      const enabled = authStatus === messaging.AuthorizationStatus.AUTHORIZED ||
                     authStatus === messaging.AuthorizationStatus.PROVISIONAL;
      
      console.log('üî• Firebase: –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã:', enabled);
      
      if (enabled) {
        console.log('üî• Firebase: –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω...');
        const token = await messaging().getToken();
        console.log('üî• FCM Token –ø–æ–ª—É—á–µ–Ω:', token);
        console.log('üì± –ü–æ–ª–Ω—ã–π FCM —Ç–æ–∫–µ–Ω:', token);
        return token;
      } else {
        console.log('üî• Firebase: –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã');
      }
    } else {
      console.log('üî• Firebase: –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ Android, —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω');
    }
    return null;
  } catch (error) {
    console.error('‚ùå Firebase: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è FCM —Ç–æ–∫–µ–Ω–∞:', error);
    return null;
  }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Ñ–æ–Ω–µ
export const setupBackgroundMessageHandler = () => {
  console.log('üî• Firebase: –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ–Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π');
  messaging().setBackgroundMessageHandler(async (remoteMessage) => {
    console.log('üì± Background message received:', remoteMessage);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Notifee –≤ —Ñ–æ–Ω–µ
    if (remoteMessage.notification) {
      const { title, body } = remoteMessage.notification;
      
      try {
        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Notifee –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        const notifee = require('@notifee/react-native').default;
        
        // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        const channelId = await notifee.createChannel({
          id: 'firebase-background',
          name: 'Firebase Background',
          importance: 4, // High importance
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        await notifee.displayNotification({
          title: title || '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
          body: body || '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
          data: remoteMessage.data,
          android: {
            channelId,
            smallIcon: 'ic_launcher',
            pressAction: {
              id: 'default',
            },
          },
        });
        
        console.log('‚úÖ Notifee —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ —Ñ–æ–Ω–µ');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ Notifee —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ñ–æ–Ω–µ:', error);
      }
    }
  });
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞ –ø–µ—Ä–µ–¥–Ω–µ–º –ø–ª–∞–Ω–µ
export const setupForegroundMessageHandler = () => {
  console.log('üî• Firebase: –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –ø–µ—Ä–µ–¥–Ω–µ–º –ø–ª–∞–Ω–µ');
  messaging().onMessage(async (remoteMessage) => {
    console.log('üì± Foreground message received:', remoteMessage);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Notifee –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ
    if (remoteMessage.notification) {
      const { title, body } = remoteMessage.notification;
      
      try {
        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Notifee –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        const notifee = require('@notifee/react-native').default;
        
        // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        const channelId = await notifee.createChannel({
          id: 'firebase-foreground',
          name: 'Firebase Foreground',
          importance: 4, // High importance
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        await notifee.displayNotification({
          title: title || '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
          body: body || '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
          data: remoteMessage.data,
          android: {
            channelId,
            smallIcon: 'ic_launcher',
            pressAction: {
              id: 'default',
            },
          },
        });
        
        console.log('‚úÖ Notifee —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –ø–µ—Ä–µ–¥–Ω–µ–º –ø–ª–∞–Ω–µ');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ Notifee —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        
        // Fallback –Ω–∞ PushNotification –µ—Å–ª–∏ Notifee –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
        const PushNotification = require('react-native-push-notification').default;
        PushNotification.localNotification({
          title: title || '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
          message: body || '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
          playSound: true,
          soundName: 'default',
          priority: 'high',
          importance: 'high',
          data: remoteMessage.data,
        });
      }
    }
  });
};

export default firebaseMessaging;
